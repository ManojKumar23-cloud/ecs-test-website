AWSTemplateFormatVersion: '2010-09-09'
Description: ECS resources for containerized website.

Resources:
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: WebsiteDemonewVPC

  # Public Subnet
  MyPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: WebsiteDemonewPublicSubnet

  # Internet Gateway
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway

  # Attach IGW to VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  # Public Route Table
  MyPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: WebsiteDemonewPublicRouteTable

  # Default route to the Internet Gateway
  MyPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MyPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  # Associate the Public Subnet with the Public Route Table
  MyPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPublicSubnet
      RouteTableId: !Ref MyPublicRouteTable

  # Security Group
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP, SSH and HTTPS traffic
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 # Allow HTTP traffic from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 # Allow HTTPS traffic from anywhere
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0 # Allow all outbound traffic
      Tags:
        - Key: Name
          Value: WebsiteDemoSecurityGroup

  # ECS Cluster
  MyECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: WebsiteDemo1Cluster

  # ECS Task Definition
  MyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: WebsiteDemonew1Task
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: arn:aws:iam::216989130794:role/Ecs-execution-new-role
      ContainerDefinitions:
        - Name: websitenew-demo
          Image: !Sub 216989130794.dkr.ecr.us-east-1.amazonaws.com/website-demo:latest
          Memory: 512
          Cpu: 256
          PortMappings:
            - ContainerPort: 80
              HostPort: 80

  # ECS Service
  MyService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref MyECSCluster
      TaskDefinition: !Ref MyTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref MyPublicSubnet
          SecurityGroups:
            - !Ref MySecurityGroup
          AssignPublicIp: ENABLED

Outputs:
  VPCId:
    Description: The VPC ID
    Value: !Ref MyVPC

  PublicSubnetId:
    Description: The Public Subnet ID
    Value: !Ref MyPublicSubnet

  SecurityGroupId:
    Description: The Security Group ID
    Value: !Ref MySecurityGroup
